/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package calc.calcUI;
import java.awt.Component;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.text.NumberFormat;
import java.util.EventListener;
import java.util.Locale;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JCheckBoxMenuItem;
import javax.swing.JComboBox;
/**
 *
 * @author Region
 */
public class CalcUI extends javax.swing.JFrame {
   Converter converter = new Converter();
       /**
     * Creates new form CalcUI
     */
    public CalcUI() {
        setTitle("Unit Converter");
        initComponents();
        myInitComponents();
    }
    public void myInitComponents() {
//initializations of two Unit Comboboxes with top Units from UnitChooseCombobox list - Длина
LangMenuItem_Russ_.setState(true);
PointMenuItem.setState(true);
     FromCmBox.setModel(new javax.swing.DefaultComboBoxModel(new String[]{
            "ангстрем", "нанометр", "микрометр", "мм",
            "cм", "дц", "м", "чейн", "км", "дюйм", "фут",
            "ярд", "мил(mil)", "морская миля", "морская сажень"}));
        ToCmBx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{
            "ангстрем", "нанометр", "микрометр", "мм",
            "cм", "дц", "м", "чейн", "км", "дюйм", "фут",
            "ярд", "мил(mil)", "морская миля", "морская сажень"}));
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        FromCmBox = new javax.swing.JComboBox();
        UnitChooseCBx = new javax.swing.JComboBox();
        ToTxtField = new javax.swing.JTextField();
        ToCmBx = new javax.swing.JComboBox();
        FromTxtField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu4 = new javax.swing.JMenu();
        LangMenuItem_Russ_ = new javax.swing.JCheckBoxMenuItem();
        LangMenuItem_Eng_ = new javax.swing.JCheckBoxMenuItem();
        jMenu2 = new javax.swing.JMenu();
        PointMenuItem = new javax.swing.JCheckBoxMenuItem();
        CommaMenuItem = new javax.swing.JCheckBoxMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jRadioButtonMenuItem1 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem2 = new javax.swing.JRadioButtonMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("UNIT Converter");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, UnitChooseCBx, org.jdesktop.beansbinding.ELProperty.create("${selectedItem}"), FromCmBox, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        FromCmBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FromCmBoxActionPerformed(evt);
            }
        });

        UnitChooseCBx.setMaximumRowCount(12);
        UnitChooseCBx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Длина", "Площадь", "Объем" }));
        UnitChooseCBx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UnitChooseCBxActionPerformed(evt);
            }
        });

        ToTxtField.setEditable(false);
        ToTxtField.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        ToTxtField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ToTxtFieldActionPerformed(evt);
            }
        });

        ToCmBx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ToCmBxActionPerformed(evt);
            }
        });

        FromTxtField.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        FromTxtField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FromTxtFieldActionPerformed(evt);
            }
        });

        jLabel2.setText("from");

        jLabel3.setText("to");

        jMenu4.setText("Язык");
        jMenu4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu4ActionPerformed(evt);
            }
        });

        LangMenuItem_Russ_.setText("Русский");
        LangMenuItem_Russ_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LangMenuItem_Russ_ActionPerformed(evt);
            }
        });
        jMenu4.add(LangMenuItem_Russ_);

        LangMenuItem_Eng_.setText("Английский");
        LangMenuItem_Eng_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LangMenuItem_Eng_ActionPerformed(evt);
            }
        });
        jMenu4.add(LangMenuItem_Eng_);

        jMenuBar1.add(jMenu4);

        jMenu2.setText("Разделители");

        PointMenuItem.setText("Точка");
        PointMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PointMenuItemActionPerformed(evt);
            }
        });
        jMenu2.add(PointMenuItem);

        CommaMenuItem.setText("Запятая");
        CommaMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CommaMenuItemActionPerformed(evt);
            }
        });
        jMenu2.add(CommaMenuItem);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Вид");

        jRadioButtonMenuItem1.setSelected(true);
        jRadioButtonMenuItem1.setText("Полный список");
        jRadioButtonMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem1ActionPerformed(evt);
            }
        });
        jMenu3.add(jRadioButtonMenuItem1);

        jRadioButtonMenuItem2.setSelected(true);
        jRadioButtonMenuItem2.setText("Краткий");
        jRadioButtonMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem2ActionPerformed(evt);
            }
        });
        jMenu3.add(jRadioButtonMenuItem2);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(UnitChooseCBx, 0, 170, Short.MAX_VALUE)
                    .addComponent(FromTxtField, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ToTxtField, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(FromCmBox, 0, 216, Short.MAX_VALUE)
                    .addComponent(ToCmBx, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(UnitChooseCBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FromTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(FromCmBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ToTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ToCmBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addContainerGap(42, Short.MAX_VALUE))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void UnitChooseCBxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UnitChooseCBxActionPerformed
                 //  Switching Units in UnitChooseCombobox list
        switch (UnitChooseCBx.getSelectedIndex()) {  
            case 0://dlina
                if (LangMenuItem_Russ_.isSelected()) {
                    FromCmBox.setModel(new javax.swing.DefaultComboBoxModel(
                            new String[]{"ангстрем", "нанометр", "микрометр", "мм",
                        "cм", "дц", "м", "чейн", "км", "дюйм", "фут", "ярд", "мил(mil)",
                        "морская миля", "морская сажень"}));
                    ToCmBx.setModel(new javax.swing.DefaultComboBoxModel(
                            new String[]{"ангстрем", "нанометр", "микрометр", "мм",
                        "cм", "дц", "м", "чейн", "км", "дюйм", "фут", "ярд",
                        "мил(mil)", "морская миля", "морская сажень"}));
                } else {//in English
                    FromCmBox.setModel(new javax.swing.DefaultComboBoxModel(new String[]{
                        "Angstrom (Å)", "Nanometre (nm)", "Micrometre (µm)", "Millimetre (mm)",
                        "Centimetre (cm)", "Decimetre (dm)", "Metre (m)", "Chain", "Kilometre (km)", "Inch (in)", "Foot (ft)",
                        "Yard (yd)", "Mil(mil)", "Sea mile", "Fathom"}));
                    ToCmBx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{
                        "Angstrom (Å)", "Nanometre (nm)", "Micrometre (µm)", "Millimetre (mm)",
                        "Centimetre (cm)", "Decimetre (dm)", "Metre (m)", "Chain", "Kilometre (km)", "Inch (in)", "Foot (ft)",
                        "Yard (yd)", "Mil(mil)", "Sea mile", "Fathom"}));
                }
                break;
            case 1://square
                if (LangMenuItem_Russ_.isSelected()) {
                    FromCmBox.setModel(new javax.swing.DefaultComboBoxModel(
                            new String[]{"кв.нанометр", "кв.микрометр", "мм кв.",
                        "см кв.", "дц кв.", "м2", "Ар", "Гектар", "км2", "Тауншип",
                        "миля кв.", "Хомстед", "Акр", "Руд", "Род кв.", "Сквайр",
                        "Ярд2", "Фут2", "Дюйм2"}));
                    ToCmBx.setModel(new javax.swing.DefaultComboBoxModel(
                            new String[]{"кв.нанометр", "кв.микрометр", "мм кв.",
                        "см кв.", "дц кв.", "м2", "Ар", "Гектар", "км2", "Тауншип",
                        "миля кв.", "Хомстед", "Акр", "Руд", "Род кв.", "Сквайр",
                        "Ярд2", "Фут2", "Дюйм2"}));
                } else {//in English
                    FromCmBox.setModel(new javax.swing.DefaultComboBoxModel(
                            new String[]{"Sq. nanometre", "Sq. micrometre", "Sq. millimetre",
                        "Sq. centimetre (cm²)", "Sq. decimetre", "Sq. metre", "Are (a)",
                        "Hectare (ha)", "Sq. kilometre", "Township", "Sq. mile", "Homestead",
                        "Acre", "Rood", "Sq. rod", "Square", "Sq. yard (sy²)", "Sq. foot (ft²)", "Sq. inch (in²)"}));
                    ToCmBx.setModel(new javax.swing.DefaultComboBoxModel(
                            new String[]{"Sq. nanometre", "Sq. micrometre", "Sq. millimetre",
                        "Sq. centimetre (cm²)", "Sq. decimetre", "Sq. metre", "Are (a)",
                        "Hectare (ha)", "Sq. kilometre", "Township", "Sq. mile", "Homestead",
                        "Acre", "Rood", "Sq. rod", "Square", "Sq. yard (sy²)", "Sq. foot (ft²)", "Sq. inch (in²)"}));
                }
                break;
            case 2://volume
                if (LangMenuItem_Russ_.isSelected()) {
                    FromCmBox.setModel(new javax.swing.DefaultComboBoxModel(new String[]{
                        "Микролитр", "Мм3", "Миллилитр", "Сантиметр3", "Сантилитр", "Децилитр", "Литр", "Дециметр3", "Декалитр", "Гектолитр", "Метр3", "Километр3",
                        /*GB*/ "БаррельGB", "БушельGB", "ПэкGB", "ГаллонGB", "КвартаGB", "ПинтаGB", "Жидкая унцияGB",
                        /*USA_dry:*/ "БаррельUSA,dry", "БушельUSA,dry", "ПэкUSA,dry", "ГаллонUSA,dry",
                        "КвартаUSA,dry", "ПинтаUSA,dry", "ГиллUSA,dry", "Досковый футUSA,dry",
                        /*USA_luquid:*/ "АкрофутUSA,luquid", "Кубический ярдUSA,luquid", "БаррельUSA,luquid",
                        "Кубический футUSA,luquid", "ГаллонUSA,luquid", "КвартаUSA,luquid", "ПинтаUSA,luquid",
                        "ГиллUSA,luquid", "Жидкая унцияUSA,luquid", "Кубический дюймUSA,luquid",
                        "Жидкая драхмаUSA,luquid", "МинимUSA,luquid"}));
                    ToCmBx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"Микролитр", "Мм3", "Миллилитр", "Сантиметр3", "Сантилитр", "Децилитр", "Литр", "Дециметр3", "Декалитр", "Гектолитр", "Метр3", "Километр3",
                        /*GB*/ "БаррельGB", "БушельGB", "ПэкGB", "ГаллонGB", "КвартаGB", "ПинтаGB", "Жидкая унцияGB",
                        /*USA_dry:*/ "БаррельUSA,dry", "БушельUSA,dry", "ПэкUSA,dry", "ГаллонUSA,dry",
                        "КвартаUSA,dry", "ПинтаUSA,dry", "ГиллUSA,dry", "Досковый футUSA,dry",
                        /*USA_luquid:*/ "АкрофутUSA,luquid", "Кубический ярдUSA,luquid", "БаррельUSA,luquid",
                        "Кубический футUSA,luquid", "ГаллонUSA,luquid", "КвартаUSA,luquid", "ПинтаUSA,luquid",
                        "ГиллUSA,luquid", "Жидкая унцияUSA,luquid", "Кубический дюймUSA,luquid",
                        "Жидкая драхмаUSA,luquid", "МинимUSA,luquid"}));
                } else {//in English
                    FromCmBox.setModel(new javax.swing.DefaultComboBoxModel(new String[]{
                        "µl", "mm³", "ml", "cm³", "cl", "dl", "Litre", "dm³", "Decalitre", "hl", "m³", "km³",
                        /*GB*/ "Barrel GB", "Bushel GB (bu)", "Peck GB (pk)", "Gallon GB (gal)", "Quart GB (qt)", "Pint GB (pt)", "Fluid ounce GB (oz)",
                        /*USA_dry:*/ "Barrel USA,dry", "Bushel USA,dry (bu)", "Peck USA,dry (pk)", "Gallon USA,dry (gal)", "Quart USA,dry (qt)", "Pint USA,dry (pt)", "Gill USA,dry", "Board foot USA,dry (FBM)",
                        /*USA_luquid:*/ "Acre foot USA,luquid", "Cubic yard USA,luquid (yd³)", "Barrel USA,luquid",
                        "Cubic foot USA,luquid (ft³)", "Gallon USA,luquid (gal)", "Quart USA,luquid (qt)", "Pint USA,luquid (pt)",
                        "Gill USA,luquid", "Fluid ounce USA,luquid (oz)", "Cubic inch USA,luquid (in³)",
                        "Fluid dram USA,luquid", "Minim USA,luquid"}));
                    ToCmBx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{
                        "µl", "mm³", "ml", "cm³", "cl", "dl", "Litre", "dm³", "Decalitre", "hl", "m³", "km³",
                        /*GB*/ "Barrel GB", "Bushel GB (bu)", "Peck GB (pk)", "Gallon GB (gal)", "Quart GB (qt)", "Pint GB (pt)", "Fluid ounce GB (oz)",
                        /*USA_dry:*/ "Barrel USA,dry", "Bushel USA,dry (bu)", "Peck USA,dry (pk)", "Gallon USA,dry (gal)", "Quart USA,dry (qt)", "Pint USA,dry (pt)", "Gill USA,dry", "Board foot USA,dry (FBM)",
                        /*USA_luquid:*/ "Acre foot USA,luquid", "Cubic yard USA,luquid (yd³)", "Barrel USA,luquid",
                        "Cubic foot USA,luquid (ft³)", "Gallon USA,luquid (gal)", "Quart USA,luquid (qt)", "Pint USA,luquid (pt)",
                        "Gill USA,luquid", "Fluid ounce USA,luquid (oz)", "Cubic inch USA,luquid (in³)",
                        "Fluid dram USA,luquid", "Minim USA,luquid"}));
                }
                break;
            case 3://podacha
                FromCmBox.setModel(new javax.swing.DefaultComboBoxModel(
                        new String[]{"p1", "p2", "p3", "p4"}));
                ToCmBx.setModel(new javax.swing.DefaultComboBoxModel(
                        new String[]{"p1", "p2", "p3", "p4"}));
                break;
        }
    }//GEN-LAST:event_UnitChooseCBxActionPerformed

    private void ToCmBxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ToCmBxActionPerformed
ToTxtField.setText(converter.myFormatter(converter.convert(
    FromCmBox.getSelectedIndex(),ToCmBx.getSelectedIndex(),FromTxtField.getText(),(String)UnitChooseCBx.getSelectedItem()),
    CommaMenuItem.isSelected()));
    }//GEN-LAST:event_ToCmBxActionPerformed

    private void ToTxtFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ToTxtFieldActionPerformed
ToTxtField.setText(converter.myFormatter(converter.convert(
    FromCmBox.getSelectedIndex(),ToCmBx.getSelectedIndex(),FromTxtField.getText(),(String)UnitChooseCBx.getSelectedItem()),
    CommaMenuItem.isSelected()));
    }//GEN-LAST:event_ToTxtFieldActionPerformed

    private void FromCmBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FromCmBoxActionPerformed
ToTxtField.setText(converter.myFormatter(converter.convert(
    FromCmBox.getSelectedIndex(),ToCmBx.getSelectedIndex(),FromTxtField.getText(),(String)UnitChooseCBx.getSelectedItem()),
    CommaMenuItem.isSelected()));
    }//GEN-LAST:event_FromCmBoxActionPerformed

    private void FromTxtFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FromTxtFieldActionPerformed
ToTxtField.setText(converter.myFormatter(converter.convert(
    FromCmBox.getSelectedIndex(),ToCmBx.getSelectedIndex(),FromTxtField.getText(),(String)UnitChooseCBx.getSelectedItem()),
    CommaMenuItem.isSelected()));
    }//GEN-LAST:event_FromTxtFieldActionPerformed

    private void LangMenuItem_Russ_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LangMenuItem_Russ_ActionPerformed
        UnitChooseCBx.setModel(new javax.swing.DefaultComboBoxModel(new String []{"Длина", "Площадь", "Объем"}));
        FromCmBox.setModel(new javax.swing.DefaultComboBoxModel(new String[]{
            "ангстрем", "нанометр", "микрометр", "мм",
            "cм", "дц", "м", "чейн", "км", "дюйм", "фут",
            "ярд", "мил(mil)", "морская миля", "морская сажень"}));
        ToCmBx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{
            "ангстрем", "нанометр", "микрометр", "мм",
            "cм", "дц", "м", "чейн", "км", "дюйм", "фут",
            "ярд", "мил(mil)", "морская миля", "морская сажень"}));         
        LangMenuItem_Eng_.setState(false);
    }//GEN-LAST:event_LangMenuItem_Russ_ActionPerformed

    private void LangMenuItem_Eng_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LangMenuItem_Eng_ActionPerformed
       UnitChooseCBx.setModel(new javax.swing.DefaultComboBoxModel(new String []{"Lenght","Area","Volume"}));
        FromCmBox.setModel(new javax.swing.DefaultComboBoxModel(new String[]{
            "Angstrom (Å)", "Nanometre (nm)", "Micrometre (µm)", "Millimetre (mm)",
            "Centimetre (cm)", "Decimetre (dm)", "Metre (m)", "Chain", "Kilometre (km)", "Inch (in)", "Foot (ft)",
            "Yard (yd)", "Mil(mil)", "Sea mile", "Fathom"}));
        ToCmBx.setModel(new javax.swing.DefaultComboBoxModel(new String[]{
            "Angstrom (Å)", "Nanometre (nm)", "Micrometre (µm)", "Millimetre (mm)",
            "Centimetre (cm)", "Decimetre (dm)", "Metre (m)", "Chain", "Kilometre (km)", "Inch (in)", "Foot (ft)",
            "Yard (yd)", "Mil(mil)", "Sea mile", "Fathom"}));
        LangMenuItem_Russ_.setState(false);
    }//GEN-LAST:event_LangMenuItem_Eng_ActionPerformed

    private void jRadioButtonMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItem1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButtonMenuItem1ActionPerformed

    private void jRadioButtonMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItem2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButtonMenuItem2ActionPerformed

    private void jMenu4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenu4ActionPerformed

    private void CommaMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CommaMenuItemActionPerformed
ToTxtField.setText(converter.myFormatter(converter.convert(
    FromCmBox.getSelectedIndex(),ToCmBx.getSelectedIndex(),FromTxtField.getText(),(String)UnitChooseCBx.getSelectedItem()),
    CommaMenuItem.isSelected()));
PointMenuItem.setState(false);
    }//GEN-LAST:event_CommaMenuItemActionPerformed

    private void PointMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PointMenuItemActionPerformed
CommaMenuItem.setState(false);
ToTxtField.setText(converter.myFormatter(converter.convert(
    FromCmBox.getSelectedIndex(),ToCmBx.getSelectedIndex(),FromTxtField.getText(),(String)UnitChooseCBx.getSelectedItem()),
    CommaMenuItem.isSelected())); 
    }//GEN-LAST:event_PointMenuItemActionPerformed
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CalcUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CalcUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CalcUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CalcUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CalcUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBoxMenuItem CommaMenuItem;
    protected javax.swing.JComboBox FromCmBox;
    protected javax.swing.JTextField FromTxtField;
    private javax.swing.JCheckBoxMenuItem LangMenuItem_Eng_;
    private javax.swing.JCheckBoxMenuItem LangMenuItem_Russ_;
    private javax.swing.JCheckBoxMenuItem PointMenuItem;
    protected javax.swing.JComboBox ToCmBx;
    protected javax.swing.JTextField ToTxtField;
    protected javax.swing.JComboBox UnitChooseCBx;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem1;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem2;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
